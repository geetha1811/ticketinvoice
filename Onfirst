onFirstDataRendered(params: any): void {
    this.setDefaultFilter();
  }

  setDefaultFilter(): void {
    // Get the filter instance for the 'status' column
    const filterInstance = this.gridApi.getFilterInstance('status');
    if (filterInstance) {
      // Set the filter model to show only 'A' (Active) by default
      filterInstance.setModel({ values: ['A'] });
      this.gridApi.onFilterChanged(); // Apply the filter
    }
  }
}






onFirstDataRendered(params: any): void {
    // Adding a small delay to ensure the data is fully loaded before setting the filter
    setTimeout(() => {
      this.setDefaultFilter();
    }, 100); // 100ms delay to allow data to load completely
  }

  setDefaultFilter(): void {
    // Get the filter instance for the 'status' column
    const filterInstance = this.gridApi.getFilterInstance('status');
    if (filterInstance) {
      // Set the filter model to show only 'A' (Active) by default
      filterInstance.setModel({ values: ['A'] });
      this.gridApi.onFilterChanged(); // Apply the filter
    }
  }
}







onFirstDataRendered(params: any): void {
  setTimeout(() => {
    // Get the filter instance for 'status' column
    const filterInstance = this.gridApi.getFilterInstance('status');
    
    if (filterInstance) {
      // Set the filter to show only 'A' by default
      filterInstance.setModel({ values: ['A'] });
      
      // Apply the filter and refresh the view
      this.gridApi.onFilterChanged();
      this.gridApi.refreshCells(); // Ensure cells are refreshed
    }
  }, 100); // Adjust the delay if necessary
}





onGridReady(params: any): void {
  this.gridApi = params.api;
  this.gridColumnApi = params.columnApi;

  // Adjust columns to fit
  this.gridApi.sizeColumnsToFit();

  // Set default filter to "A" on load
  this.applyDefaultStatusFilter();
}

applyDefaultStatusFilter(): void {
  setTimeout(() => {
    // Get the filter instance for 'status' column
    const filterInstance = this.gridApi.getFilterInstance('status');

    if (filterInstance) {
      // Set the filter model to show only 'A'
      filterInstance.setModel({ values: ['A'] });
      this.gridApi.onFilterChanged(); // Apply the filter
    }
  }, 100); // Delay to ensure data is loaded
}
